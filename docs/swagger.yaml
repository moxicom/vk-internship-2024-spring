basePath: /
definitions:
  handlers.IdResponse:
    properties:
      id:
        type: integer
    type: object
  models.Actor:
    properties:
      birthday:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - birthday
    - gender
    - name
    type: object
  models.ActorFilms:
    properties:
      birthday:
        type: string
      gender:
        type: string
      id:
        type: integer
      movies:
        items:
          type: integer
        type: array
      name:
        type: string
    required:
    - birthday
    - gender
    - name
    type: object
  models.Movie:
    properties:
      date:
        type: string
      description:
        description: Not required
        type: string
      id:
        type: integer
      name:
        type: string
      rating:
        description: 1-10
        type: number
    required:
    - date
    - name
    - rating
    type: object
  models.MovieActors:
    properties:
      actors:
        items:
          type: integer
        type: array
      date:
        type: string
      description:
        description: Not required
        type: string
      id:
        type: integer
      name:
        type: string
      rating:
        description: 1-10
        type: number
    required:
    - date
    - name
    - rating
    type: object
  models.RelationMoviesActors:
    properties:
      actor_id:
        type: string
      movie_id:
        type: string
    required:
    - actor_id
    - movie_id
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for managing a movie database.
  title: Movie Database API
  version: "1.0"
paths:
  /actors/:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all actors.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.ActorFilms'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Retrieve actors
      tags:
      - Actors
    post:
      consumes:
      - application/json
      description: Add a new actor to the database.
      parameters:
      - description: Actor object to add
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/models.Actor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.IdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Add actor
      tags:
      - Actors
  /actors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing actor from the database.
      parameters:
      - description: Actor ID to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete actor
      tags:
      - Actors
    get:
      consumes:
      - application/json
      description: Retrieve a list of all actors or a specific actor by ID.
      parameters:
      - description: Actor ID to retrieve (optional)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ActorFilms'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Retrieve actors
      tags:
      - Actors
    put:
      consumes:
      - application/json
      description: Update an existing actor in the database.
      parameters:
      - description: Actor ID to update
        in: path
        name: id
        required: true
        type: string
      - description: Actor object to update
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/models.Actor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Update actor
      tags:
      - Actors
  /movies/:
    get:
      consumes:
      - application/json
      description: Retrieve a list of movies with optional sorting and filtering.
      parameters:
      - description: 'Sort parameter: valid values are ''name'', ''date'', ''rating''
          (default: ''rating'')'
        in: query
        name: sort
        type: string
      - description: 'Order parameter: valid values are ''asc'', ''desc'' (default:
          ''desc'')'
        in: query
        name: order
        type: string
      - description: Search movies by name (optional)
        in: query
        name: movie_name
        type: string
      - description: Search movies by actor name (optional)
        in: query
        name: actor_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.MovieActors'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Retrieve movies
      tags:
      - Movies
    post:
      consumes:
      - application/json
      description: Add a new movie to the database.
      parameters:
      - description: Movie object to add
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.IdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Add movie
      tags:
      - Movies
  /movies/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a movie by its ID.
      parameters:
      - description: Movie ID to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete movie
      tags:
      - Movies
    get:
      consumes:
      - application/json
      description: Retrieve a specific movie by ID.
      parameters:
      - description: Movie ID to retrieve
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MovieActors'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Retrieve movie
      tags:
      - Movies
    put:
      consumes:
      - application/json
      description: Update an existing movie by its ID.
      parameters:
      - description: Movie ID to update
        in: path
        name: id
        required: true
        type: integer
      - description: Updated movie object
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Update movie
      tags:
      - Movies
  /relations/:
    delete:
      consumes:
      - application/json
      description: Delete a relation between a movie and an actor.
      parameters:
      - description: Relation object to delete
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationMoviesActors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete relation
      tags:
      - Relations
    post:
      consumes:
      - application/json
      description: Add a relation between a movie and an actor.
      parameters:
      - description: Relation object to add
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationMoviesActors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Add relation
      tags:
      - Relations
swagger: "2.0"
